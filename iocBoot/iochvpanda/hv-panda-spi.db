#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("dbd/explore.dbd")
#! DBDEND

# force "reset" by clearing SPI BUSY
record(bo, "$(P)SPI:RST") {
  field(ZNAM, "Reset")
  field(ONAM, "Reset")
  field(FLNK, "$(P)SPI:STSCLR_")
}

# Periodic scanning begins here
# 1 bit counter to select which
# SPI register to read in this
    # cycle.
record(calcout, "$(P)SPI:SCAN:SEQ") {
  field(SCAN, "1 second")
  field(CALC, "(A+1)&1")
  field(INPA, "$(P)SPI:SCAN:SEQ")
  field(OUT, "$(SPI:SCAN:SEL_.SELN PP")
}

record(fanout, "$(SPI:SCAN:SEL_") {
  field(SELM, "Specified")
  field(LNK0, "$(P)SPI:ILK:SCAN")
  field(LNK2, "$(P)SPI:OI:SCAN")
}

# Send command to read interlock status
record(longout, "$(P)SPI:ILK:SCAN") {
  field(VAL, "0x80000019")
  field(OUT, "$(P)SPI:CMD_ PP")
}

# Send command to read over current status
record(longout, "$(P)SPI:OI:SCAN") {
  field(VAL, "0x80000018")
  field(OUT, "$(P)SPI:CMD_ PP")
}

# SPI command register
# writes begin an operation
record(longout, "$(P)SPI:CMD_") {
  field(DTYP, "Explore PCI Write32")
  field(FLNK, "$(P)SPI:BUSY")
  field(OUT, "@$(DEV) 0 2900")
}

# Read busy bit from SPI status register
record(bi, "$(P)SPI:BUSY") {
  field(SCAN, ".1 second")
  field(DTYP, "Explore PCI Read32")
  field(INP,  "@$(DEV) 0 2904")
  field(MASK, "0x100")
  field(ZNAM, "Done")
  field(ONAM, "Busy")
  field(ZSV , "MINOR")
  field(FLNK, "$(P)SPI:SCAN:CLR_")
}

# Conditional  (BUSY==DISV)
# When BUSY==1 do nothing
# When BUSY!=1 trigger clear of busy
# bit and read of data registers.
record(longout, "$(P)SPI:SCAN:CLR_") {
  field(DISV, "1")
  field(SDIS, "$(P)SPI:BUSY")
  field(OUT, "$(P)SPI:STSCLR_.PROC PP")
  field(FLNK, "$(P)SPI:DONE:FOut")
}

# SPI status bit clear register
record(longout, "$(P)SPI:STSCLR_") {
  field(DTYP, "Explore PCI Write32")
  field(VAL, "0x400")
  field(OUT, "@$(DEV) 0 2908")
  field(PINI, "YES") # force clear once on startup
}

# trigger readout of SPI data register.
# we read all even though only one has updated
# since we don't track which command was last issued
record(fanout, "$(P)SPI:DONE:FOut") {
  field(LNK0, "$(P)CH0:ILK:STS")
  field(LNK1, "$(P)CH0:OI:STS")
}

record(bi, "$(P)CH0:ILK:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3024)
  field(MASK, "0x80")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(FLNK, "$(P)CH1:ILK:STS")
}

record(bi, "$(P)CH1:ILK:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3024)
  field(MASK, "0x40")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(FLNK, "$(P)CH2:ILK:STS")
}

record(bi, "$(P)CH2:ILK:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3024)
  field(MASK, "0x20")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(FLNK, "$(P)CH3:ILK:STS")
}

record(bi, "$(P)CH3:ILK:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3024)
  field(MASK, "0x10")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(FLNK, "$(P)ILK:STS")
}

record(bi, "$(P)ILK:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3024)
  field(MASK, "0x01")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

record(bi, "$(P)CH0:OI:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3020)
  field(MASK, "0x80")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(FLNK, "$(P)CH1:OI:STS")
}

record(bi, "$(P)CH1:OI:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3020)
  field(MASK, "0x40")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(FLNK, "$(P)CH2:OI:STS")
}

record(bi, "$(P)CH2:OI:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3020)
  field(MASK, "0x20")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(FLNK, "$(P)CH3:OI:STS")
}

record(bi, "$(P)CH3:OI:STS") {
  field(DTYP, "Explore PCI Read32")
  field(INP, "@$(DEV) 0 3020)
  field(MASK, "0x10")
  field(ZNAM, "Zero")
  field(ONAM, "One")
}

#! Further lines contain data used by VisualDCT
#! View(2000,2315,1.0)
#! Record("$(P)SPI:CMD_",2480,2142,0,1,"$(P)SPI:CMD_")
#! Field("$(P)SPI:CMD_.VAL",16777215,0,"$(P)SPI:CMD_.VAL")
#! Field("$(P)SPI:CMD_.FLNK",16777215,1,"$(P)SPI:CMD_.FLNK")
#! Link("$(P)SPI:CMD_.FLNK","$(P)SPI:BUSY")
#! Record("$(P)SPI:STSCLR_",2820,2248,0,1,"$(P)SPI:STSCLR_")
#! Field("$(P)SPI:STSCLR_.VAL",16777215,1,"$(P)SPI:STSCLR_.VAL")
#! Record("$(P)SPI:BUSY",2520,2360,0,1,"$(P)SPI:BUSY")
#! Field("$(P)SPI:BUSY.FLNK",16777215,1,"$(P)SPI:BUSY.FLNK")
#! Link("$(P)SPI:BUSY.FLNK","$(P)SPI:SCAN:CLR_")
#! Field("$(P)SPI:BUSY.VAL",16777215,1,"$(P)SPI:BUSY.VAL")
#! Record("$(P)SPI:ILK:SCAN",2040,2156,0,0,"$(P)SPI:ILK:SCAN")
#! Field("$(P)SPI:ILK:SCAN.OUT",16777215,1,"$(P)SPI:ILK:SCAN.OUT")
#! Link("$(P)SPI:ILK:SCAN.OUT","$(P)SPI:CMD_.VAL")
#! Record("$(P)SPI:SCAN:CLR_",2800,2414,0,0,"$(P)SPI:SCAN:CLR_")
#! Field("$(P)SPI:SCAN:CLR_.SDIS",16777215,0,"$(P)SPI:SCAN:CLR_.SDIS")
#! Link("$(P)SPI:SCAN:CLR_.SDIS","$(P)SPI:BUSY.VAL")
#! Field("$(P)SPI:SCAN:CLR_.OUT",16777215,1,"$(P)SPI:SCAN:CLR_.OUT")
#! Link("$(P)SPI:SCAN:CLR_.OUT","$(P)SPI:STSCLR_.VAL")
#! Field("$(P)SPI:SCAN:CLR_.FLNK",16777215,0,"$(P)SPI:SCAN:CLR_.FLNK")
#! Link("$(P)SPI:SCAN:CLR_.FLNK","$(P)SPI:DONE:FOut")
#! Record("$(P)SPI:OI:SCAN",2040,2316,0,0,"$(P)SPI:OI:SCAN")
#! Field("$(P)SPI:OI:SCAN.OUT",16777215,1,"$(P)SPI:OI:SCAN.OUT")
#! Link("$(P)SPI:OI:SCAN.OUT","$(P)SPI:CMD_.VAL")
#! Record("$(P)SPI:SCAN:SEQ",1720,2128,0,1,"$(P)SPI:SCAN:SEQ")
#! Field("$(P)SPI:SCAN:SEQ.VAL",16777215,0,"$(P)SPI:SCAN:SEQ.VAL")
#! Field("$(P)SPI:SCAN:SEQ.INPA",16777215,0,"$(P)SPI:SCAN:SEQ.INPA")
#! Link("$(P)SPI:SCAN:SEQ.INPA","$(P)SPI:SCAN:SEQ.VAL")
#! Field("$(P)SPI:SCAN:SEQ.OUT",16777215,0,"$(P)SPI:SCAN:SEQ.OUT")
#! Link("$(P)SPI:SCAN:SEQ.OUT","$(SPI:SCAN:SEL_.SELN")
#! Record("$(SPI:SCAN:SEL_",1720,2342,0,1,"$(SPI:SCAN:SEL_")
#! Field("$(SPI:SCAN:SEL_.LNK0",16777215,1,"$(SPI:SCAN:SEL_.LNK0")
#! Link("$(SPI:SCAN:SEL_.LNK0","$(P)SPI:ILK:SCAN")
#! Field("$(SPI:SCAN:SEL_.LNK2",16777215,1,"$(SPI:SCAN:SEL_.LNK2")
#! Link("$(SPI:SCAN:SEL_.LNK2","$(P)SPI:OI:SCAN")
#! Field("$(SPI:SCAN:SEL_.SELN",16777215,0,"$(SPI:SCAN:SEL_.SELN")
#! Record("$(P)SPI:DONE:FOut",2480,2710,0,1,"$(P)SPI:DONE:FOut")
#! Field("$(P)SPI:DONE:FOut.LNK0",16777215,0,"$(P)SPI:DONE:FOut.LNK0")
#! Link("$(P)SPI:DONE:FOut.LNK0","$(P)CH0:ILK:STS")
#! Record("$(P)CH0:ILK:STS",2160,2708,0,1,"$(P)CH0:ILK:STS")
